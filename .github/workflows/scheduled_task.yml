name: Run Daily Script

on:
  schedule:
    - cron: '30 2,17 * * *'
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Кэшируем Python
      - name: Cache Python
        id: cache-python
        uses: actions/cache@v4
        with:
          path: ~/.pyenv
          key: python-3.11-${{ runner.os }}

      - name: Set up Python
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -y python3.11 python3.11-venv python3.11-dev
          python3.11 -m venv ~/.pyenv
          echo "PYTHON_HOME=$HOME/.pyenv" >> $GITHUB_ENV
          echo "$HOME/.pyenv/bin" >> $GITHUB_PATH

      - name: Activate Python
        run: echo "PYTHON_HOME=$HOME/.pyenv" >> $GITHUB_ENV

      # Кэшируем зависимости pip
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          source $PYTHON_HOME/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Кэшируем YDB CLI
      - name: Cache YDB CLI
        id: cache-ydb
        uses: actions/cache@v4
        with:
          path: ~/.ydb
          key: ydb-cli-${{ runner.os }}

      - name: Install YDB CLI
        if: steps.cache-ydb.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.ydb
          curl -sSL https://storage.yandexcloud.net/ydb-cli/ydb-linux-amd64-latest -o ~/.ydb/ydb
          chmod +x ~/.ydb/ydb
          echo "$HOME/.ydb" >> $GITHUB_PATH

      - name: Authenticate with YDB
        run: |
          echo '${{ secrets.AUTHORIZED_KEY_JSON }}' > authorized_key.json
          sudo apt-get update && sudo apt-get install -y jq
          export IAM_TOKEN=$(curl -s -d "@authorized_key.json" "https://iam.api.cloud.yandex.net/iam/v1/tokens" | jq -r .iamToken)
          echo "IAM_TOKEN=${IAM_TOKEN}" >> $GITHUB_ENV

      - name: Run Script
        env:
          CITIES: "huzhir,sahyurta,harantsi,sarma,kurma,buguldeyka,shida,agaluy,sayansk,slyudyanka,baikalsk,utulik,mangutay,kultuk,baykal,angarsk,savvateevka,leestvyanka,irkutsk,nikola,bolshoe_goloustnoe,granovshchina,hayryuzovka,bolshie_koti,patroni,ust-ilimsk"
          ROOMS_DATA_PATH: "./tables/rooms_data"
          HOTELS_STATISTICS_PATH: "./tables/hotels_statistics"
          DATABASE_FILE: "./databases/af_all_2024.csv"
          CITY_CENTER_AND_SEA_DISTANCES_FILE: "./databases/hotels_city_center_and_sea_distances.csv"
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          YDB_ENDPOINT: ${{ secrets.YDB_ENDPOINT }}
          YDB_DATABASE: ${{ secrets.YDB_DATABASE }}
          AUTHORIZED_KEY_PATH: "./authorized_key.json"
          LOG_FILE_PATH: "./logs/logging.log"
          IAM_TOKEN: ${{ env.IAM_TOKEN }}
        run: |
          source $PYTHON_HOME/bin/activate
          python main.py
